/*
Lists

CRUD operations to manage lists and list memberships

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lists

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the PublicNumberPropertyOperation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicNumberPropertyOperation{}

// PublicNumberPropertyOperation struct for PublicNumberPropertyOperation
type PublicNumberPropertyOperation struct {
	OperationType                string  `json:"operationType"`
	Operator                     string  `json:"operator"`
	IncludeObjectsWithNoValueSet bool    `json:"includeObjectsWithNoValueSet"`
	Value                        float32 `json:"value"`
}

type _PublicNumberPropertyOperation PublicNumberPropertyOperation

// NewPublicNumberPropertyOperation instantiates a new PublicNumberPropertyOperation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicNumberPropertyOperation(operationType string, operator string, includeObjectsWithNoValueSet bool, value float32) *PublicNumberPropertyOperation {
	this := PublicNumberPropertyOperation{}
	this.OperationType = operationType
	this.Operator = operator
	this.IncludeObjectsWithNoValueSet = includeObjectsWithNoValueSet
	this.Value = value
	return &this
}

// NewPublicNumberPropertyOperationWithDefaults instantiates a new PublicNumberPropertyOperation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicNumberPropertyOperationWithDefaults() *PublicNumberPropertyOperation {
	this := PublicNumberPropertyOperation{}
	var operationType string = "NUMBER"
	this.OperationType = operationType
	return &this
}

// GetOperationType returns the OperationType field value
func (o *PublicNumberPropertyOperation) GetOperationType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OperationType
}

// GetOperationTypeOk returns a tuple with the OperationType field value
// and a boolean to check if the value has been set.
func (o *PublicNumberPropertyOperation) GetOperationTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OperationType, true
}

// SetOperationType sets field value
func (o *PublicNumberPropertyOperation) SetOperationType(v string) {
	o.OperationType = v
}

// GetOperator returns the Operator field value
func (o *PublicNumberPropertyOperation) GetOperator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Operator
}

// GetOperatorOk returns a tuple with the Operator field value
// and a boolean to check if the value has been set.
func (o *PublicNumberPropertyOperation) GetOperatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Operator, true
}

// SetOperator sets field value
func (o *PublicNumberPropertyOperation) SetOperator(v string) {
	o.Operator = v
}

// GetIncludeObjectsWithNoValueSet returns the IncludeObjectsWithNoValueSet field value
func (o *PublicNumberPropertyOperation) GetIncludeObjectsWithNoValueSet() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IncludeObjectsWithNoValueSet
}

// GetIncludeObjectsWithNoValueSetOk returns a tuple with the IncludeObjectsWithNoValueSet field value
// and a boolean to check if the value has been set.
func (o *PublicNumberPropertyOperation) GetIncludeObjectsWithNoValueSetOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IncludeObjectsWithNoValueSet, true
}

// SetIncludeObjectsWithNoValueSet sets field value
func (o *PublicNumberPropertyOperation) SetIncludeObjectsWithNoValueSet(v bool) {
	o.IncludeObjectsWithNoValueSet = v
}

// GetValue returns the Value field value
func (o *PublicNumberPropertyOperation) GetValue() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *PublicNumberPropertyOperation) GetValueOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *PublicNumberPropertyOperation) SetValue(v float32) {
	o.Value = v
}

func (o PublicNumberPropertyOperation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicNumberPropertyOperation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["operationType"] = o.OperationType
	toSerialize["operator"] = o.Operator
	toSerialize["includeObjectsWithNoValueSet"] = o.IncludeObjectsWithNoValueSet
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

func (o *PublicNumberPropertyOperation) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"operationType",
		"operator",
		"includeObjectsWithNoValueSet",
		"value",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPublicNumberPropertyOperation := _PublicNumberPropertyOperation{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPublicNumberPropertyOperation)

	if err != nil {
		return err
	}

	*o = PublicNumberPropertyOperation(varPublicNumberPropertyOperation)

	return err
}

type NullablePublicNumberPropertyOperation struct {
	value *PublicNumberPropertyOperation
	isSet bool
}

func (v NullablePublicNumberPropertyOperation) Get() *PublicNumberPropertyOperation {
	return v.value
}

func (v *NullablePublicNumberPropertyOperation) Set(val *PublicNumberPropertyOperation) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicNumberPropertyOperation) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicNumberPropertyOperation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicNumberPropertyOperation(val *PublicNumberPropertyOperation) *NullablePublicNumberPropertyOperation {
	return &NullablePublicNumberPropertyOperation{value: val, isSet: true}
}

func (v NullablePublicNumberPropertyOperation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicNumberPropertyOperation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
