openapi: 3.0.1
info:
  description: CRUD operations to manage lists and list memberships
  title: Lists
  version: v3
  x-hubspot-product-tier-requirements:
    marketing: STARTER
    cms: STARTER
  x-hubspot-documentation-banner: NONE
  x-hubspot-api-use-case: "You want to bulk add contacts to a particular list, or\
    \ remove company records from a company list."
  x-hubspot-related-documentation:
  - name: Lists Overview
    url: https://developers.hubspot.com/docs/api/crm/lists
  x-hubspot-introduction: "Use the lists API to manage list memberships for contact,\
    \ company, and custom object lists."
servers:
- url: https://api.hubapi.com
tags:
- description: ""
  name: Lists
  x-hubspot-tag-name-english-source: Lists
- description: ""
  name: Memberships
  x-hubspot-tag-name-english-source: Memberships
paths:
  /crm/v3/lists/{listId}/update-list-name:
    put:
      description: Update the name of a list. The name must be globally unique relative
        to all other public lists in the portal.
      operationId: UpdateName
      parameters:
      - description: The **ILS ID** of the list to update.
        explode: false
        in: path
        name: listId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: The name to update the list to.
        explode: true
        in: query
        name: listName
        required: false
        schema:
          type: string
        style: form
      - description: "A flag indicating whether or not the response object list definition\
          \ should include a filter branch definition. By default, object list definitions\
          \ will not have their filter branch definitions included in the response."
        explode: true
        in: query
        name: includeFilters
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                updatedList:
                  listId: 123
                  listVersion: 2
                  createdAt: 2023-11-15T18:16:52.165Z
                  updatedAt: 2023-11-15T19:03:32.979Z
                  filtersUpdatedAt: 2023-11-15T19:03:24.160Z
                  processingStatus: COMPLETE
                  createdById: 123
                  updatedById: 123
                  processingType: DYNAMIC
                  objectTypeId: 0-1
                  name: Updated List Name
              schema:
                $ref: '#/components/schemas/ListUpdateResponse'
          description: "Successful response, for a request with `includeFilters` set\
            \ to `false`."
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - crm.lists.read
        - crm.lists.write
      - oauth2:
        - crm.lists.read
        - crm.lists.write
      summary: Update List Name
      tags:
      - Lists
  /crm/v3/lists/{listId}/memberships/add-and-remove:
    put:
      description: |-
        Add and/or remove records that have already been created in the system to and/or from a list.

        This endpoint only works for lists that have a `processingType` of `MANUAL` or `SNAPSHOT`.
      operationId: AddAndRemoveMemberships
      parameters:
      - description: The **ILS ID** of the `MANUAL` or `SNAPSHOT` list.
        explode: false
        in: path
        name: listId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembershipChangeRequest'
        description: The IDs of the records to add and/or remove from the list.
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                recordIdsAdded:
                - 123
                - 456
                recordIdsMissing:
                - 789
                recordIdsRemoved:
                - 654
              schema:
                $ref: '#/components/schemas/MembershipsUpdateResponse'
          description: Successful response
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - crm.lists.read
        - crm.lists.write
      - oauth2:
        - crm.lists.read
        - crm.lists.write
      summary: Add and/or Remove Records from a List
      tags:
      - Memberships
  /crm/v3/lists/{listId}:
    delete:
      description: "Delete a list by **ILS list ID**. Lists deleted through this endpoint\
        \ can be restored up to 90-days following the delete. After 90-days, the list\
        \ is purged and can no longer be restored."
      operationId: Remove
      parameters:
      - description: The **ILS ID** of the list to delete.
        explode: false
        in: path
        name: listId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "204":
          content: {}
          description: No content
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - crm.lists.read
        - crm.lists.write
      - oauth2:
        - crm.lists.read
        - crm.lists.write
      summary: Delete a List
      tags:
      - Lists
    get:
      description: Fetch a single list by **ILS list ID**.
      operationId: "get-/crm/v3/lists/{listId}_getById"
      parameters:
      - description: The **ILS ID** of the list to fetch.
        explode: false
        in: path
        name: listId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "A flag indicating whether or not the response object list definition\
          \ should include a filter branch definition. By default, object list definitions\
          \ will not have their filter branch definitions included in the response."
        explode: true
        in: query
        name: includeFilters
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                list:
                  listId: 1
                  listVersion: 1
                  createdAt: 2023-11-15T18:15:00.812Z
                  updatedAt: 2023-11-15T18:15:20.210Z
                  filtersUpdatedAt: 2023-11-15T18:15:00.812Z
                  processingStatus: COMPLETE
                  createdById: 123
                  updatedById: 123
                  processingType: SNAPSHOT
                  objectTypeId: 0-1
                  name: Snapshot List Example
                  filterBranch:
                    filterBranches:
                    - filterBranches: []
                      filters:
                      - property: hs_content_membership_status
                        operation:
                          operator: IS_ANY_OF
                          includeObjectsWithNoValueSet: false
                          values:
                          - inactive
                          - active
                          operationType: ENUMERATION
                        filterType: PROPERTY
                      - listId: 2
                        operator: IN_LIST
                        filterType: IN_LIST
                      filterBranchOperator: AND
                      filterBranchType: AND
                    filters: []
                    filterBranchOperator: OR
                    filterBranchType: OR
              schema:
                $ref: '#/components/schemas/ListFetchResponse'
          description: "Successful response, for a request with `includeFilters` set\
            \ to `true`."
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - crm.lists.read
      - oauth2:
        - crm.lists.read
      summary: Fetch List by ID
      tags:
      - Lists
  /crm/v3/lists/{listId}/update-list-filters:
    put:
      description: "Update the filter branch definition of a `DYNAMIC` list. Once\
        \ updated, the list memberships will be re-evaluated and updated to match\
        \ the new definition."
      operationId: "put-/crm/v3/lists/{listId}/update-list-filters_updateListFilters"
      parameters:
      - description: The **ILS ID** of the list to update.
        explode: false
        in: path
        name: listId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: A flag indicating whether or not the memberships added to the
          list as a result of the filter change should be enrolled in workflows that
          are relevant to this list.
        explode: true
        in: query
        name: enrollObjectsInWorkflows
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFilterUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                updatedList:
                  listId: 1
                  listVersion: 2
                  createdAt: 2023-11-15T20:11:50.293Z
                  updatedAt: 2023-11-15T23:50:12.771Z
                  filtersUpdatedAt: 2023-11-15T23:50:12.690Z
                  processingStatus: PROCESSING
                  createdById: 123
                  updatedById: 123
                  processingType: DYNAMIC
                  objectTypeId: 0-1
                  name: Zero Size Test
                  filterBranch:
                    filterBranches:
                    - filterBranches: []
                      filters:
                      - property: hs_predictivecontactscore_v2
                        operation:
                          operator: IS_GREATER_THAN_OR_EQUAL_TO
                          includeObjectsWithNoValueSet: false
                          value: 12
                          operationType: NUMBER
                        filterType: PROPERTY
                      - property: engagements_last_meeting_booked_source
                        operation:
                          operator: IS_UNKNOWN
                          includeObjectsWithNoValueSet: false
                          operationType: ALL_PROPERTY
                        filterType: PROPERTY
                      - subscriptionIds:
                        - 321981152
                        - 81537745
                        acceptedStatuses:
                        - OPT_IN
                        subscriptionType: SUBSCRIPTION
                        filterType: EMAIL_SUBSCRIPTION
                      filterBranchType: AND
                      filterBranchOperator: AND
                    filters: []
                    filterBranchType: OR
                    filterBranchOperator: OR
              schema:
                $ref: '#/components/schemas/ListUpdateResponse'
          description: Successful response
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - crm.lists.read
        - crm.lists.write
      - oauth2:
        - crm.lists.read
        - crm.lists.write
      summary: Update List Filter Definition
      tags:
      - Lists
  /crm/v3/lists/search:
    post:
      description: Search lists by list name or page through all lists by providing
        an empty `query` value.
      operationId: post-/crm/v3/lists/search_doSearch
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSearchRequest'
        description: The IDs of the records to add and/or remove from the list.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSearchResponse'
          description: Successful response
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - crm.lists.read
      - oauth2:
        - crm.lists.read
      summary: Search Lists
      tags:
      - Lists
  /crm/v3/lists/{listId}/memberships/add:
    put:
      description: |-
        Add the records provided to the list. Records that do not exist or that are already members of the list are ignored.

        This endpoint only works for lists that have a `processingType` of `MANUAL` or `SNAPSHOT`.
      operationId: AddMemberships
      parameters:
      - description: The **ILS ID** of the `MANUAL` or `SNAPSHOT` list.
        explode: false
        in: path
        name: listId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: int64
                type: integer
              type: array
        description: The IDs of the records to add to the list.
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                recordIdsAdded:
                - 123
                - 456
                recordIdsMissing:
                - 789
              schema:
                $ref: '#/components/schemas/MembershipsUpdateResponse'
          description: Successful response
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - crm.lists.read
        - crm.lists.write
      - oauth2:
        - crm.lists.read
        - crm.lists.write
      summary: Add Records to a List
      tags:
      - Memberships
  /crm/v3/lists/object-type-id/{objectTypeId}/name/{listName}:
    get:
      description: Fetch a single list by list name and object type.
      operationId: "get-/crm/v3/lists/object-type-id/{objectTypeId}/name/{listName}_getByName"
      parameters:
      - description: The name of the list to fetch. This is **not** case sensitive.
        explode: false
        in: path
        name: listName
        required: true
        schema:
          type: string
        style: simple
      - description: "The object type ID of the object types stored by the list to\
          \ fetch. For example, `0-1` for a `CONTACT` list."
        explode: false
        in: path
        name: objectTypeId
        required: true
        schema:
          type: string
        style: simple
      - description: "A flag indicating whether or not the response object list definition\
          \ should include a filter branch definition. By default, object list definitions\
          \ will not have their filter branch definitions included in the response."
        explode: true
        in: query
        name: includeFilters
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                list:
                  listId: 1
                  listVersion: 1
                  createdAt: 2023-11-15T18:10:11.793Z
                  updatedAt: 2023-11-15T18:10:11.923Z
                  filtersUpdatedAt: 2023-11-15T18:10:11.793Z
                  processingStatus: COMPLETE
                  createdById: 123
                  updatedById: 123
                  processingType: MANUAL
                  objectTypeId: 0-1
                  name: Manual List Example
              schema:
                $ref: '#/components/schemas/ListFetchResponse'
          description: "Successful response, for a request with `includeFilters` set\
            \ to `false`."
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - crm.lists.read
      - oauth2:
        - crm.lists.read
      summary: Fetch List by Name
      tags:
      - Lists
  /crm/v3/lists/{listId}/memberships/add-from/{sourceListId}:
    put:
      description: |-
        Add all of the records from a *source list* (specified by the `sourceListId`) to a *destination list* (specified by the `listId`). Records that are already members of the *destination list* will be ignored. The *destination* and *source list* IDs must be different. The *destination* and *source lists* must contain records of the same type (e.g. contacts, companies, etc.).

        This endpoint only works for *destination lists* that have a `processingType` of `MANUAL` or `SNAPSHOT`. The *source list* can have any `processingType`.
      operationId: "put-/crm/v3/lists/{listId}/memberships/add-from/{sourceListId}_addAllFromList"
      parameters:
      - description: "The **ILS ID** of the `MANUAL` or `SNAPSHOT` *destination list*,\
          \ which the *source list* records are added to."
        explode: false
        in: path
        name: listId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "The **ILS ID** of the *source list* to grab the records from,\
          \ which are then added to the *destination list*."
        explode: false
        in: path
        name: sourceListId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "204":
          content: {}
          description: Operation successful
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - crm.lists.read
        - crm.lists.write
      - oauth2:
        - crm.lists.read
        - crm.lists.write
      summary: Add All Records from a Source List to a Destination List
      tags:
      - Memberships
  /crm/v3/lists/:
    get:
      description: Fetch multiple lists in a single request by **ILS list ID**. The
        response will include the definitions of all lists that exist for the `listIds`
        provided.
      operationId: get-/crm/v3/lists/_getAll
      parameters:
      - description: The **ILS IDs** of the lists to fetch.
        explode: true
        in: query
        name: listIds
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      - description: "A flag indicating whether or not the response object list definitions\
          \ should include a filter branch definition. By default, object list definitions\
          \ will not have their filter branch definitions included in the response."
        explode: true
        in: query
        name: includeFilters
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                lists:
                - listId: 1
                  listVersion: 2
                  createdAt: 2023-11-06T20:44:49.324Z
                  updatedAt: 2023-11-15T20:24:36.761Z
                  filtersUpdatedAt: 2023-11-15T20:24:22.020Z
                  processingStatus: COMPLETE
                  createdById: 123
                  updatedById: 123
                  processingType: DYNAMIC
                  objectTypeId: 0-1
                  name: Example List 1
                  filterBranch:
                    filterBranches:
                    - filterBranches: []
                      filters:
                      - property: firstname
                        operation:
                          operator: CONTAINS
                          includeObjectsWithNoValueSet: false
                          values:
                          - j
                          operationType: MULTISTRING
                        filterType: PROPERTY
                      filterBranchOperator: AND
                      filterBranchType: AND
                    filters: []
                    filterBranchOperator: OR
                    filterBranchType: OR
                - listId: 2
                  listVersion: 2
                  createdAt: 2023-06-13T14:54:21.852Z
                  updatedAt: 2023-06-13T14:54:53.996Z
                  filtersUpdatedAt: 2023-06-13T14:54:21.852Z
                  processingStatus: COMPLETE
                  createdById: 123
                  updatedById: 123
                  processingType: DYNAMIC
                  objectTypeId: 0-1
                  name: Example List 2
                  filterBranch:
                    filterBranches:
                    - filterBranches: []
                      filters:
                      - property: firstname
                        operation:
                          operator: IS_EQUAL_TO
                          includeObjectsWithNoValueSet: false
                          values:
                          - Fred
                          operationType: MULTISTRING
                        filterType: PROPERTY
                      filterBranchOperator: AND
                      filterBranchType: AND
                    filters: []
                    filterBranchOperator: OR
                    filterBranchType: OR
                - listId: 3
                  listVersion: 1
                  createdAt: 2023-08-02T16:11:29.182Z
                  updatedAt: 2023-08-02T16:13:18.777Z
                  filtersUpdatedAt: 2023-08-02T16:11:29.182Z
                  processingStatus: COMPLETE
                  processingType: DYNAMIC
                  objectTypeId: 0-2
                  name: Example List 3
                  filterBranch:
                    filterBranches:
                    - filterBranches: []
                      filters:
                      - level: EMAIL_API_CAMPAIGN_GROUP
                        emailId: 123
                        appId: 123
                        operator: LINK_CLICKED
                        filterType: EMAIL_EVENT
                      objectTypeId: 0-1
                      operator: IN_LIST
                      associationTypeId: 2
                      associationCategory: HUBSPOT_DEFINED
                      filterBranchOperator: AND
                      filterBranchType: ASSOCIATION
                    filters: []
                    filterBranchOperator: OR
                    filterBranchType: OR
                - listId: 4
                  listVersion: 1
                  createdAt: 2023-08-28T18:43:50.703Z
                  updatedAt: 2023-08-28T18:43:56.004Z
                  filtersUpdatedAt: 2023-08-28T18:43:50.703Z
                  processingStatus: COMPLETE
                  createdById: 123
                  updatedById: 123
                  processingType: DYNAMIC
                  objectTypeId: 2-14190808
                  name: Example List 4
                  filterBranch:
                    filterBranches:
                    - filterBranches: []
                      filters:
                      - property: vehicle_color
                        operation:
                          operator: IS_EQUAL_TO
                          includeObjectsWithNoValueSet: false
                          values:
                          - red
                          operationType: MULTISTRING
                        filterType: PROPERTY
                      filterBranchOperator: AND
                      filterBranchType: AND
                    filters: []
                    filterBranchOperator: OR
                    filterBranchType: OR
                - listId: 5
                  listVersion: 7
                  createdAt: 2023-08-22T19:41:53.210Z
                  updatedAt: 2023-08-23T18:14:06.886Z
                  filtersUpdatedAt: 2023-08-23T18:11:55.326Z
                  processingStatus: COMPLETE
                  createdById: 858789758
                  updatedById: 858789758
                  processingType: DYNAMIC
                  objectTypeId: 0-1
                  name: Example List 5
                  filterBranch:
                    filterBranches:
                    - filterBranches: []
                      filters:
                      - level: EMAIL_API_CAMPAIGN_GROUP
                        emailId: 123
                        appId: 123
                        operator: RECEIVED
                        filterType: EMAIL_EVENT
                      objectTypeId: 0-1
                      operator: IN_LIST
                      associationTypeId: 449
                      associationCategory: HUBSPOT_DEFINED
                      filterBranchOperator: AND
                      filterBranchType: ASSOCIATION
                    filters: []
                    filterBranchOperator: OR
                    filterBranchType: OR
              schema:
                $ref: '#/components/schemas/ListsByIdResponse'
          description: "Successful response, for a request with `includeFilters` set\
            \ to `true`."
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - crm.lists.read
      - oauth2:
        - crm.lists.read
      summary: Fetch Multiple Lists
      tags:
      - Lists
    post:
      description: Create a new list with the provided object list definition.
      operationId: Create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListCreateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCreateResponse'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2:
        - crm.lists.write
      - private_apps:
        - crm.lists.write
      summary: Create List
      tags:
      - Lists
  /crm/v3/lists/{listId}/restore:
    put:
      description: Restore a previously deleted list by **ILS list ID**. Deleted lists
        are eligible to be restored up-to 90-days after the list has been deleted.
      operationId: "put-/crm/v3/lists/{listId}/restore_restore"
      parameters:
      - description: The **ILS ID** of the list to restore.
        explode: false
        in: path
        name: listId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "204":
          content: {}
          description: No content
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - crm.lists.read
        - crm.lists.write
      - oauth2:
        - crm.lists.read
        - crm.lists.write
      summary: Restore a List
      tags:
      - Lists
  /crm/v3/lists/{listId}/memberships:
    delete:
      description: |-
        Remove **all** of the records from a list. ***Note:*** *The list is not deleted.*

        This endpoint only works for lists that have a `processingType` of `MANUAL` or `SNAPSHOT`.
      operationId: "delete-/crm/v3/lists/{listId}/memberships_removeAll"
      parameters:
      - description: The **ILS ID** of the `MANUAL` or `SNAPSHOT` list.
        explode: false
        in: path
        name: listId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "204":
          content: {}
          description: Operation successful
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - crm.lists.read
        - crm.lists.write
      - oauth2:
        - crm.lists.read
        - crm.lists.write
      summary: Delete All Records from a List
      tags:
      - Memberships
    get:
      description: |-
        Fetch the memberships of a list in order sorted by the `recordId` of the records in the list.

        The `recordId`s are sorted in *ascending* order if an `after` offset or no offset is provided. If only a `before` offset is provided, then the records are sorted in *descending* order.

        The `after` offset parameter will take precedence over the `before` offset in a case where both are provided.
      operationId: "get-/crm/v3/lists/{listId}/memberships_getPage"
      parameters:
      - description: The **ILS ID** of the list.
        explode: false
        in: path
        name: listId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: |-
          The paging offset token for the page that comes `after` the previously requested records.

          If provided, then the records in the response will be the records following the offset, sorted in *ascending* order. Takes precedence over the `before` offset.
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: |-
          The paging offset token for the page that comes `before` the previously requested records.

          If provided, then the records in the response will be the records preceding the offset, sorted in *descending* order.
        explode: true
        in: query
        name: before
        required: false
        schema:
          type: string
        style: form
      - description: The number of records to return in the response. The maximum
          `limit` is 250.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                results:
                - 202
                - 232
                - 239
                paging:
                  next:
                    after: AAAAAAAAAS0%3D
                    link: https://private.hubapi.com/crm/v3/lists/123/memberships?portalId=865747473&limit=2&after=AAAAAAAAAS0%3D
                  prev:
                    before: AAAAAAAAAMk%3D
                    link: https://private.hubapi.com/crm/v3/lists/123/memberships?before=AAAAAAAAAMk%3D&portalId=865747473&limit=2
              schema:
                $ref: '#/components/schemas/CollectionResponseLong'
          description: Successful response
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - crm.lists.read
      - oauth2:
        - crm.lists.read
      summary: Fetch List Memberships Ordered by ID
      tags:
      - Memberships
  /crm/v3/lists/{listId}/memberships/remove:
    put:
      description: |-
        Remove the records provided from the list. Records that do not exist or that are not members of the list are ignored.

        This endpoint only works for lists that have a `processingType` of `MANUAL` or `SNAPSHOT`.
      operationId: RemoveMemberships
      parameters:
      - description: The **ILS ID** of the `MANUAL` or `SNAPSHOT` list.
        explode: false
        in: path
        name: listId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: int64
                type: integer
              type: array
        description: The IDs of the records to remove from the list.
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                recordIdsRemoved:
                - 123
                - 456
                recordIdsMissing:
                - 789
              schema:
                $ref: '#/components/schemas/MembershipsUpdateResponse'
          description: Successful response
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - private_apps:
        - crm.lists.read
        - crm.lists.write
      - oauth2:
        - crm.lists.read
        - crm.lists.write
      summary: Remove Records from a List
      tags:
      - Memberships
components:
  responses:
    Error:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
      description: An error occurred.
  schemas:
    PublicDatePropertyOperation:
      properties:
        operationType:
          default: DATE
          enum:
          - DATE
          type: string
        operator:
          type: string
        includeObjectsWithNoValueSet:
          type: boolean
        year:
          format: int32
          type: integer
        month:
          type: string
        day:
          format: int32
          type: integer
      required:
      - day
      - includeObjectsWithNoValueSet
      - month
      - operationType
      - operator
      - year
      title: DATE
      type: object
    PublicPropertyAssociationFilterBranch:
      properties:
        filterBranchType:
          default: PROPERTY_ASSOCIATION
          enum:
          - PROPERTY_ASSOCIATION
          type: string
        filterBranchOperator:
          type: string
        filterBranches:
          items:
            $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch_filterBranches_inner'
          type: array
        filters:
          items:
            $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch_filters_inner'
          type: array
        objectTypeId:
          type: string
        operator:
          type: string
        propertyWithObjectId:
          type: string
      required:
      - filterBranchOperator
      - filterBranchType
      - filterBranches
      - filters
      - objectTypeId
      - operator
      - propertyWithObjectId
      title: PROPERTY_ASSOCIATION
      type: object
    PublicEventAnalyticsFilter:
      properties:
        filterType:
          default: EVENT
          enum:
          - EVENT
          type: string
        coalescingRefineBy:
          $ref: '#/components/schemas/PublicEventAnalyticsFilter_coalescingRefineBy'
        pruningRefineBy:
          $ref: '#/components/schemas/PublicEventAnalyticsFilter_coalescingRefineBy'
        operator:
          type: string
        eventId:
          type: string
      required:
      - eventId
      - filterType
      - operator
      title: EVENT
      type: object
    PublicNumberPropertyOperation:
      properties:
        operationType:
          default: NUMBER
          enum:
          - NUMBER
          type: string
        operator:
          type: string
        includeObjectsWithNoValueSet:
          type: boolean
        value:
          type: number
      required:
      - includeObjectsWithNoValueSet
      - operationType
      - operator
      - value
      title: NUMBER
      type: object
    PublicUnifiedEventsFilter:
      properties:
        filterType:
          default: UNIFIED_EVENTS
          enum:
          - UNIFIED_EVENTS
          type: string
        pruningRefineBy:
          $ref: '#/components/schemas/PublicEventAnalyticsFilter_coalescingRefineBy'
        coalescingRefineBy:
          $ref: '#/components/schemas/PublicEventAnalyticsFilter_coalescingRefineBy'
        eventTypeId:
          type: string
        filterLines:
          items:
            $ref: '#/components/schemas/PublicEventFilterMetadata'
          type: array
      required:
      - filterLines
      - filterType
      title: UNIFIED_EVENTS
      type: object
    PublicYearReference:
      properties:
        referenceType:
          default: YEAR
          enum:
          - YEAR
          type: string
        hour:
          format: int32
          type: integer
        minute:
          format: int32
          type: integer
        second:
          format: int32
          type: integer
        millisecond:
          format: int32
          type: integer
        month:
          format: int32
          type: integer
        day:
          format: int32
          type: integer
      required:
      - day
      - month
      - referenceType
      title: YEAR
      type: object
    PublicFiscalYearReference:
      properties:
        referenceType:
          default: FISCAL_YEAR
          enum:
          - FISCAL_YEAR
          type: string
        hour:
          format: int32
          type: integer
        minute:
          format: int32
          type: integer
        second:
          format: int32
          type: integer
        millisecond:
          format: int32
          type: integer
        month:
          format: int32
          type: integer
        day:
          format: int32
          type: integer
      required:
      - day
      - month
      - referenceType
      title: FISCAL_YEAR
      type: object
    PublicCalendarDatePropertyOperation:
      properties:
        operationType:
          default: CALENDAR_DATE
          enum:
          - CALENDAR_DATE
          type: string
        operator:
          type: string
        includeObjectsWithNoValueSet:
          type: boolean
        timeUnit:
          type: string
        fiscalYearStart:
          enum:
          - JANUARY
          - FEBRUARY
          - MARCH
          - APRIL
          - MAY
          - JUNE
          - JULY
          - AUGUST
          - SEPTEMBER
          - OCTOBER
          - NOVEMBER
          - DECEMBER
          type: string
        useFiscalYear:
          type: boolean
        timeUnitCount:
          format: int32
          type: integer
      required:
      - includeObjectsWithNoValueSet
      - operationType
      - operator
      - timeUnit
      title: CALENDAR_DATE
      type: object
    PublicInListFilterMetadata:
      properties:
        id:
          type: string
        inListType:
          type: string
      required:
      - id
      - inListType
      type: object
    PublicPropertyFilter:
      properties:
        filterType:
          default: PROPERTY
          enum:
          - PROPERTY
          type: string
        property:
          type: string
        operation:
          $ref: '#/components/schemas/PublicPropertyFilter_operation'
      required:
      - filterType
      - operation
      - property
      title: PROPERTY
      type: object
    ErrorDetail:
      properties:
        subCategory:
          description: A specific category that contains more specific detail about
            the error
          type: string
        code:
          description: The status code associated with the error detail
          type: string
        in:
          description: The name of the field or parameter in which the error was found.
          type: string
        context:
          additionalProperties:
            items:
              type: string
            type: array
          description: Context about the error condition
          example:
            missingScopes:
            - scope1
            - scope2
          type: object
        message:
          description: A human readable message describing the error along with remediation
            steps where appropriate
          type: string
      required:
      - message
      type: object
    PublicNumAssociationsFilter:
      properties:
        filterType:
          default: NUM_ASSOCIATIONS
          enum:
          - NUM_ASSOCIATIONS
          type: string
        associationTypeId:
          format: int32
          type: integer
        associationCategory:
          type: string
        coalescingRefineBy:
          $ref: '#/components/schemas/PublicEventAnalyticsFilter_coalescingRefineBy'
      required:
      - associationCategory
      - associationTypeId
      - coalescingRefineBy
      - filterType
      title: NUM_ASSOCIATIONS
      type: object
    PublicRangedDatePropertyOperation:
      properties:
        operationType:
          default: RANGED_DATE
          enum:
          - RANGED_DATE
          type: string
        operator:
          type: string
        includeObjectsWithNoValueSet:
          type: boolean
        upperBound:
          format: int32
          type: integer
        lowerBound:
          format: int32
          type: integer
        requiresTimeZoneConversion:
          type: boolean
      required:
      - includeObjectsWithNoValueSet
      - lowerBound
      - operationType
      - operator
      - requiresTimeZoneConversion
      - upperBound
      title: RANGED_DATE
      type: object
    ListSearchRequest:
      description: The request object used for searching through lists.
      example:
        count: 100
        additionalProperties:
        - hs_list_size_week_delta
        query: Test
        offset: 0
      properties:
        offset:
          description: Value used to paginate through lists. The `offset` provided
            in the response can be used in the next request to fetch the next page
            of results. Defaults to `0` if no offset is provided.
          format: int32
          type: integer
        query:
          description: "The `query` that will be used to search for lists by list\
            \ name. If no `query` is provided, then the results will include all lists."
          type: string
        count:
          description: The number of lists to include in the response. Defaults to
            `20` if no value is provided. The max `count` is `500`.
          format: int32
          type: integer
        additionalProperties:
          description: |-
            The property names of any additional list properties to include in the response. Properties that do not exist or that are empty for a particular list are not included in the response.

            By default, all requests will fetch the following properties for each list: `hs_list_size`, `hs_last_record_added_at`, `hs_last_record_removed_at`, `hs_folder_name`, and `hs_list_reference_count`.
          items:
            type: string
          type: array
      required:
      - additionalProperties
      - offset
      type: object
    ListSearchResponse:
      description: The response object with the list search hits and additional information
        regarding pagination.
      example:
        offset: 1
        hasMore: false
        lists:
        - listId: 123
          listVersion: 1
          createdAt: 2023-09-28T22:03:17.998Z
          updatedAt: 2023-09-28T22:03:37.005Z
          filtersUpdatedAt: 2023-09-28T22:03:17.998Z
          processingStatus: COMPLETE
          createdById: 1
          updatedById: 1
          processingType: SNAPSHOT
          objectTypeId: 0-1
          name: Test list
          additionalProperties:
            hs_list_size_week_delta: "-10"
            hs_list_reference_count: "0"
            hs_last_record_added_at: "1695938616824"
            hs_list_size: "59"
        total: 1
      properties:
        total:
          description: The total number of lists that match the search criteria.
          format: int32
          type: integer
        offset:
          description: Value to be passed in a future request to paginate through
            list search results.
          format: int32
          type: integer
        lists:
          description: The lists that matched the search criteria.
          items:
            $ref: '#/components/schemas/PublicObjectListSearchResult'
          type: array
        hasMore:
          description: Whether or not there are more results to page through.
          type: boolean
      required:
      - hasMore
      - lists
      - offset
      - total
      type: object
    PublicInListFilter:
      properties:
        filterType:
          default: IN_LIST
          enum:
          - IN_LIST
          type: string
        listId:
          format: int32
          type: integer
        metadata:
          $ref: '#/components/schemas/PublicInListFilterMetadata'
        operator:
          type: string
      required:
      - filterType
      - listId
      - operator
      title: IN_LIST
      type: object
    PublicAssociationInListFilter:
      properties:
        filterType:
          default: ASSOCIATION
          enum:
          - ASSOCIATION
          type: string
        coalescingRefineBy:
          $ref: '#/components/schemas/PublicEventAnalyticsFilter_coalescingRefineBy'
        operator:
          type: string
        listId:
          format: int32
          type: integer
        toObjectTypeId:
          type: string
        associationTypeId:
          format: int32
          type: integer
        associationCategory:
          type: string
        toObjectType:
          type: string
      required:
      - associationCategory
      - associationTypeId
      - coalescingRefineBy
      - filterType
      - listId
      - operator
      title: ASSOCIATION
      type: object
    PublicSurveyMonkeyValueFilter:
      properties:
        filterType:
          default: SURVEY_MONKEY_VALUE
          enum:
          - SURVEY_MONKEY_VALUE
          type: string
        surveyId:
          type: string
        surveyQuestion:
          type: string
        surveyAnswerRowId:
          type: string
        surveyAnswerColId:
          type: string
        valueComparison:
          $ref: '#/components/schemas/PublicPropertyFilter_operation'
        operator:
          type: string
      required:
      - filterType
      - operator
      - surveyId
      - surveyQuestion
      - valueComparison
      title: SURVEY_MONKEY_VALUE
      type: object
    PublicRelativeComparativeTimestampRefineBy:
      properties:
        type:
          default: RELATIVE_COMPARATIVE
          enum:
          - RELATIVE_COMPARATIVE
          type: string
        comparison:
          type: string
        timeOffset:
          $ref: '#/components/schemas/PublicTimeOffset'
      required:
      - comparison
      - timeOffset
      - type
      title: RELATIVE_COMPARATIVE
      type: object
    ListsByIdResponse:
      description: The response object containing the lists found for a multi-list
        fetch.
      example:
        lists:
        - processingType: processingType
          objectTypeId: objectTypeId
          updatedById: 0
          filtersUpdatedAt: 2000-01-23T04:56:07.000+00:00
          listId: 6
          createdAt: 2000-01-23T04:56:07.000+00:00
          processingStatus: processingStatus
          deletedAt: 2000-01-23T04:56:07.000+00:00
          listVersion: 1
          name: name
          createdById: 5
          filterBranch: null
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - processingType: processingType
          objectTypeId: objectTypeId
          updatedById: 0
          filtersUpdatedAt: 2000-01-23T04:56:07.000+00:00
          listId: 6
          createdAt: 2000-01-23T04:56:07.000+00:00
          processingStatus: processingStatus
          deletedAt: 2000-01-23T04:56:07.000+00:00
          listVersion: 1
          name: name
          createdById: 5
          filterBranch: null
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        lists:
          description: The object list definitions.
          items:
            $ref: '#/components/schemas/PublicObjectList'
          type: array
      required:
      - lists
      type: object
    PublicCommunicationSubscriptionFilter:
      properties:
        filterType:
          default: COMMUNICATION_SUBSCRIPTION
          enum:
          - COMMUNICATION_SUBSCRIPTION
          type: string
        subscriptionIds:
          items:
            format: int64
            type: integer
          type: array
        channel:
          type: string
        acceptedOptStates:
          items:
            type: string
          type: array
        businessUnitId:
          format: int64
          type: integer
        subscriptionType:
          type: string
      required:
      - acceptedOptStates
      - channel
      - filterType
      - subscriptionIds
      - subscriptionType
      title: COMMUNICATION_SUBSCRIPTION
      type: object
    PublicEmailEventFilter:
      properties:
        filterType:
          default: EMAIL_EVENT
          enum:
          - EMAIL_EVENT
          type: string
        level:
          type: string
        emailId:
          format: int32
          type: integer
        appId:
          format: int32
          type: integer
        operator:
          enum:
          - LINK_CLICKED
          - MARKED_SPAM
          - OPENED
          - OPENED_BUT_LINK_NOT_CLICKED
          - OPENED_BUT_NOT_REPLIED
          - REPLIED
          - UNSUBSCRIBED
          - BOUNCED
          - RECEIVED
          - RECEIVED_BUT_NOT_OPENED
          - SENT
          - SENT_BUT_LINK_NOT_CLICKED
          - SENT_BUT_NOT_RECEIVED
          type: string
        clickUrl:
          type: string
        pruningRefineBy:
          $ref: '#/components/schemas/PublicEventAnalyticsFilter_coalescingRefineBy'
      required:
      - appId
      - emailId
      - filterType
      - level
      - operator
      title: EMAIL_EVENT
      type: object
    PublicObjectListSearchResult:
      example:
        objectTypeId: 0-1
        processingType: SNAPSHOT
        updatedById: 1
        filtersUpdatedAt: 2023-09-28T22:03:17.998Z
        listId: 123
        createdAt: 2023-09-28T22:03:17.998Z
        processingStatus: COMPLETED
        listVersion: 1
        name: Test list
        additionalProperties:
          hs_list_size: 59
          hs_last_record_added_at: 1695938616824
          hs_list_reference_count: 0
          hs_list_size_week_delta: -1
      properties:
        processingType:
          description: The processing type of the list.
          type: string
        objectTypeId:
          description: The object type of the list.
          type: string
        updatedById:
          description: The ID of the user that last updated the list.
          format: int32
          type: integer
        filtersUpdatedAt:
          description: The time when the filters for this list were last updated.
          format: date-time
          type: string
        listId:
          description: The **ILS ID** of the list.
          format: int32
          type: integer
        createdAt:
          description: The time when the list was created.
          format: date-time
          type: string
        processingStatus:
          description: The processing status of the list.
          type: string
        deletedAt:
          description: The time when the list was deleted.
          format: date-time
          type: string
        listVersion:
          description: The version of the list.
          format: int32
          type: integer
        name:
          description: The name of the list.
          type: string
        additionalProperties:
          additionalProperties:
            type: string
          description: The name and value of any additional properties that exist
            for this list and that were included in the search request.
          type: object
        createdById:
          description: The ID of the user that created the list.
          format: int32
          type: integer
        updatedAt:
          description: The time the list was last updated.
          format: date-time
          type: string
      required:
      - additionalProperties
      - listId
      - listVersion
      - name
      - objectTypeId
      - processingStatus
      - processingType
      type: object
    PublicOrFilterBranch:
      properties:
        filterBranchType:
          default: OR
          enum:
          - OR
          type: string
        filterBranches:
          items:
            $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch_filterBranches_inner'
          type: array
        filters:
          items:
            $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch_filters_inner'
          type: array
        filterBranchOperator:
          type: string
      required:
      - filterBranchOperator
      - filterBranchType
      - filterBranches
      - filters
      title: OR
      type: object
    PublicRelativeRangedTimestampRefineBy:
      properties:
        type:
          default: RELATIVE_RANGED
          enum:
          - RELATIVE_RANGED
          type: string
        rangeType:
          type: string
        upperBoundOffset:
          $ref: '#/components/schemas/PublicTimeOffset'
        lowerBoundOffset:
          $ref: '#/components/schemas/PublicTimeOffset'
      required:
      - lowerBoundOffset
      - rangeType
      - type
      - upperBoundOffset
      title: RELATIVE_RANGED
      type: object
    PublicAdsTimeFilter:
      properties:
        filterType:
          default: ADS_TIME
          enum:
          - ADS_TIME
          type: string
        pruningRefineBy:
          $ref: '#/components/schemas/PublicEventAnalyticsFilter_coalescingRefineBy'
      required:
      - filterType
      - pruningRefineBy
      title: ADS_TIME
      type: object
    PublicFormSubmissionOnPageFilter:
      properties:
        filterType:
          default: FORM_SUBMISSION_ON_PAGE
          enum:
          - FORM_SUBMISSION_ON_PAGE
          type: string
        formId:
          type: string
        pruningRefineBy:
          $ref: '#/components/schemas/PublicEventAnalyticsFilter_coalescingRefineBy'
        coalescingRefineBy:
          $ref: '#/components/schemas/PublicEventAnalyticsFilter_coalescingRefineBy'
        operator:
          enum:
          - FILLED_OUT
          - NOT_FILLED_OUT
          type: string
        pageId:
          type: string
      required:
      - filterType
      - operator
      - pageId
      title: FORM_SUBMISSION_ON_PAGE
      type: object
    PublicIndexOffset:
      properties:
        years:
          format: int32
          type: integer
        quarters:
          format: int32
          type: integer
        months:
          format: int32
          type: integer
        weeks:
          format: int32
          type: integer
        days:
          format: int32
          type: integer
        hours:
          format: int32
          type: integer
        minutes:
          format: int32
          type: integer
        seconds:
          format: int32
          type: integer
        milliseconds:
          format: int32
          type: integer
      type: object
    PublicPropertyAssociationInListFilter:
      properties:
        filterType:
          default: PROPERTY_ASSOCIATION
          enum:
          - PROPERTY_ASSOCIATION
          type: string
        coalescingRefineBy:
          $ref: '#/components/schemas/PublicEventAnalyticsFilter_coalescingRefineBy'
        operator:
          type: string
        listId:
          format: int32
          type: integer
        toObjectTypeId:
          type: string
        propertyWithObjectId:
          type: string
      required:
      - coalescingRefineBy
      - filterType
      - listId
      - operator
      - propertyWithObjectId
      title: PROPERTY_ASSOCIATION
      type: object
    PublicStringPropertyOperation:
      properties:
        operationType:
          default: STRING
          enum:
          - STRING
          type: string
        operator:
          type: string
        includeObjectsWithNoValueSet:
          type: boolean
        value:
          type: string
      required:
      - includeObjectsWithNoValueSet
      - operationType
      - operator
      - value
      title: STRING
      type: object
    PublicNotAllFilterBranch:
      properties:
        filterBranchType:
          default: NOT_ALL
          enum:
          - NOT_ALL
          type: string
        filterBranchOperator:
          type: string
        filterBranches:
          items:
            $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch_filterBranches_inner'
          type: array
        filters:
          items:
            $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch_filters_inner'
          type: array
      required:
      - filterBranchOperator
      - filterBranchType
      - filterBranches
      - filters
      title: NOT_ALL
      type: object
    PublicPropertyReferencedTime:
      properties:
        timeType:
          default: PROPERTY_REFERENCED
          enum:
          - PROPERTY_REFERENCED
          type: string
        timezoneSource:
          type: string
        zoneId:
          type: string
        property:
          type: string
        referenceType:
          type: string
      required:
      - property
      - referenceType
      - timeType
      - zoneId
      title: PROPERTY_REFERENCED
      type: object
    PublicFormSubmissionFilter:
      properties:
        filterType:
          default: FORM_SUBMISSION
          enum:
          - FORM_SUBMISSION
          type: string
        formId:
          type: string
        pruningRefineBy:
          $ref: '#/components/schemas/PublicEventAnalyticsFilter_coalescingRefineBy'
        coalescingRefineBy:
          $ref: '#/components/schemas/PublicEventAnalyticsFilter_coalescingRefineBy'
        operator:
          enum:
          - FILLED_OUT
          - NOT_FILLED_OUT
          type: string
      required:
      - filterType
      - operator
      title: FORM_SUBMISSION
      type: object
    Paging:
      description: The cursor to be used for paging through records.
      example:
        next:
          link: link
          after: after
        prev:
          before: before
          link: link
      properties:
        next:
          $ref: '#/components/schemas/NextPage'
        prev:
          $ref: '#/components/schemas/PreviousPage'
      type: object
    PublicPrivacyAnalyticsFilter:
      properties:
        filterType:
          default: PRIVACY
          enum:
          - PRIVACY
          type: string
        privacyName:
          type: string
        operator:
          type: string
      required:
      - filterType
      - operator
      - privacyName
      title: PRIVACY
      type: object
    PublicRollingDateRangePropertyOperation:
      properties:
        operationType:
          default: ROLLING_DATE_RANGE
          enum:
          - ROLLING_DATE_RANGE
          type: string
        operator:
          type: string
        includeObjectsWithNoValueSet:
          type: boolean
        numberOfDays:
          format: int32
          type: integer
        requiresTimeZoneConversion:
          type: boolean
      required:
      - includeObjectsWithNoValueSet
      - numberOfDays
      - operationType
      - operator
      - requiresTimeZoneConversion
      title: ROLLING_DATE_RANGE
      type: object
    PublicUnifiedEventsInListFilter:
      properties:
        filterType:
          default: UNIFIED_EVENTS_IN_LIST
          enum:
          - UNIFIED_EVENTS_IN_LIST
          type: string
        pruningRefineBy:
          $ref: '#/components/schemas/PublicEventAnalyticsFilter_coalescingRefineBy'
        coalescingRefineBy:
          $ref: '#/components/schemas/PublicEventAnalyticsFilter_coalescingRefineBy'
        listId:
          format: int32
          type: integer
        eventTypeId:
          type: string
      required:
      - eventTypeId
      - filterType
      - listId
      title: UNIFIED_EVENTS_IN_LIST
      type: object
    PublicAssociationFilterBranch:
      properties:
        filterBranchType:
          default: ASSOCIATION
          enum:
          - ASSOCIATION
          type: string
        filterBranches:
          items:
            $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch_filterBranches_inner'
          type: array
        filters:
          items:
            $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch_filters_inner'
          type: array
        objectTypeId:
          type: string
        operator:
          type: string
        associationTypeId:
          format: int32
          type: integer
        associationCategory:
          type: string
        filterBranchOperator:
          type: string
      required:
      - associationCategory
      - associationTypeId
      - filterBranchOperator
      - filterBranchType
      - filterBranches
      - filters
      - objectTypeId
      - operator
      title: ASSOCIATION
      type: object
    PublicQuarterReference:
      properties:
        referenceType:
          default: QUARTER
          enum:
          - QUARTER
          type: string
        hour:
          format: int32
          type: integer
        minute:
          format: int32
          type: integer
        second:
          format: int32
          type: integer
        millisecond:
          format: int32
          type: integer
        month:
          format: int32
          type: integer
        day:
          format: int32
          type: integer
      required:
      - day
      - month
      - referenceType
      title: QUARTER
      type: object
    PublicEmailSubscriptionFilter:
      properties:
        filterType:
          default: EMAIL_SUBSCRIPTION
          enum:
          - EMAIL_SUBSCRIPTION
          type: string
        subscriptionIds:
          items:
            format: int64
            type: integer
          type: array
        acceptedStatuses:
          items:
            type: string
          type: array
        subscriptionType:
          type: string
      required:
      - acceptedStatuses
      - filterType
      - subscriptionIds
      title: EMAIL_SUBSCRIPTION
      type: object
    PublicEnumerationPropertyOperation:
      properties:
        operationType:
          default: ENUMERATION
          enum:
          - ENUMERATION
          type: string
        operator:
          type: string
        includeObjectsWithNoValueSet:
          type: boolean
        values:
          items:
            type: string
          type: array
      required:
      - includeObjectsWithNoValueSet
      - operationType
      - operator
      - values
      title: ENUMERATION
      type: object
    ListFilterUpdateRequest:
      description: The definition of the list filter branch update request.
      example:
        filterBranch:
          filterBranches:
          - filterBranchType: AND
            filters:
            - filterType: PROPERTY
              operation:
                operationType: NUMBER
                operator: IS_GREATER_THAN_OR_EQUAL_TO
                value: 12
              property: hs_predictivecontactscore_v2
            - filterType: PROPERTY
              operation:
                operationType: ALL_PROPERTY
                operator: IS_UNKNOWN
              property: engagements_last_meeting_booked_source
            - filterType: EMAIL_SUBSCRIPTION
              acceptedStatuses:
              - OPT_IN
              subscriptionIds:
              - "81537745"
              - "321981152"
          filterBranchType: OR
      properties:
        filterBranch:
          $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch_filterBranches_inner'
      required:
      - filterBranch
      type: object
    PublicMultiStringPropertyOperation:
      properties:
        operationType:
          default: MULTISTRING
          enum:
          - MULTISTRING
          type: string
        operator:
          type: string
        includeObjectsWithNoValueSet:
          type: boolean
        values:
          items:
            type: string
          type: array
      required:
      - includeObjectsWithNoValueSet
      - operationType
      - operator
      - values
      title: MULTISTRING
      type: object
    PublicWeekReference:
      properties:
        referenceType:
          default: WEEK
          enum:
          - WEEK
          type: string
        hour:
          format: int32
          type: integer
        minute:
          format: int32
          type: integer
        second:
          format: int32
          type: integer
        millisecond:
          format: int32
          type: integer
        dayOfWeek:
          enum:
          - MONDAY
          - TUESDAY
          - WEDNESDAY
          - THURSDAY
          - FRIDAY
          - SATURDAY
          - SUNDAY
          type: string
      required:
      - dayOfWeek
      - referenceType
      title: WEEK
      type: object
    PublicAdsSearchFilter:
      properties:
        filterType:
          default: ADS_SEARCH
          enum:
          - ADS_SEARCH
          type: string
        entityType:
          type: string
        searchTermType:
          type: string
        searchTerms:
          items:
            type: string
          type: array
        adNetwork:
          type: string
        operator:
          type: string
      required:
      - adNetwork
      - entityType
      - filterType
      - operator
      - searchTermType
      - searchTerms
      title: ADS_SEARCH
      type: object
    PublicTodayReference:
      properties:
        referenceType:
          default: TODAY
          enum:
          - TODAY
          type: string
        hour:
          format: int32
          type: integer
        minute:
          format: int32
          type: integer
        second:
          format: int32
          type: integer
        millisecond:
          format: int32
          type: integer
      required:
      - referenceType
      title: TODAY
      type: object
    PublicTimePointOperation:
      properties:
        operationType:
          default: TIME_POINT
          enum:
          - TIME_POINT
          type: string
        operator:
          type: string
        includeObjectsWithNoValueSet:
          type: boolean
        timePoint:
          $ref: '#/components/schemas/PublicTimePointOperation_timePoint'
        endpointBehavior:
          type: string
        propertyParser:
          type: string
        type:
          type: string
      required:
      - includeObjectsWithNoValueSet
      - operationType
      - operator
      - timePoint
      - type
      title: TIME_POINT
      type: object
    PublicNowReference:
      properties:
        referenceType:
          default: NOW
          enum:
          - NOW
          type: string
        hour:
          format: int32
          type: integer
        minute:
          format: int32
          type: integer
        second:
          format: int32
          type: integer
        millisecond:
          format: int32
          type: integer
      required:
      - referenceType
      title: NOW
      type: object
    ListUpdateResponse:
      description: The updated definition of the list in response to a list update
        request.
      example:
        updatedList:
          processingType: processingType
          objectTypeId: objectTypeId
          updatedById: 0
          filtersUpdatedAt: 2000-01-23T04:56:07.000+00:00
          listId: 6
          createdAt: 2000-01-23T04:56:07.000+00:00
          processingStatus: processingStatus
          deletedAt: 2000-01-23T04:56:07.000+00:00
          listVersion: 1
          name: name
          createdById: 5
          filterBranch: null
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        updatedList:
          $ref: '#/components/schemas/PublicObjectList'
      type: object
    PublicAllHistoryRefineBy:
      properties:
        type:
          default: ALL_HISTORY
          enum:
          - ALL_HISTORY
          type: string
      required:
      - type
      title: ALL_HISTORY
      type: object
    PublicNotAnyFilterBranch:
      properties:
        filterBranchType:
          default: NOT_ANY
          enum:
          - NOT_ANY
          type: string
        filterBranchOperator:
          type: string
        filterBranches:
          items:
            $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch_filterBranches_inner'
          type: array
        filters:
          items:
            $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch_filters_inner'
          type: array
      required:
      - filterBranchOperator
      - filterBranchType
      - filterBranches
      - filters
      title: NOT_ANY
      type: object
    PublicIndexedTimePoint:
      properties:
        timeType:
          default: INDEXED
          enum:
          - INDEXED
          type: string
        timezoneSource:
          type: string
        zoneId:
          type: string
        indexReference:
          $ref: '#/components/schemas/PublicIndexedTimePoint_indexReference'
        offset:
          $ref: '#/components/schemas/PublicIndexOffset'
      required:
      - indexReference
      - timeType
      - zoneId
      title: INDEXED
      type: object
    PublicRangedTimeOperation:
      properties:
        type:
          default: TIME_RANGED
          enum:
          - TIME_RANGED
          type: string
        operator:
          type: string
        includeObjectsWithNoValueSet:
          type: boolean
        lowerBoundEndpointBehavior:
          type: string
        upperBoundEndpointBehavior:
          type: string
        propertyParser:
          type: string
        lowerBoundTimePoint:
          $ref: '#/components/schemas/PublicTimePointOperation_timePoint'
        upperBoundTimePoint:
          $ref: '#/components/schemas/PublicTimePointOperation_timePoint'
        operationType:
          type: string
      required:
      - includeObjectsWithNoValueSet
      - lowerBoundTimePoint
      - operationType
      - operator
      - type
      - upperBoundTimePoint
      title: TIME_RANGED
      type: object
    PublicWebinarFilter:
      properties:
        filterType:
          default: WEBINAR
          enum:
          - WEBINAR
          type: string
        operator:
          type: string
        webinarId:
          type: string
      required:
      - filterType
      - operator
      title: WEBINAR
      type: object
    PublicRestrictedFilterBranch:
      properties:
        filterBranchType:
          default: RESTRICTED
          enum:
          - RESTRICTED
          type: string
        filterBranchOperator:
          type: string
        filterBranches:
          items:
            $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch_filterBranches_inner'
          type: array
        filters:
          items:
            $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch_filters_inner'
          type: array
      required:
      - filterBranchOperator
      - filterBranchType
      - filterBranches
      - filters
      title: RESTRICTED
      type: object
    ListCreateResponse:
      description: The response for a list create request.
      example:
        list:
          listId: 1
          listVersion: 1
          createdAt: 2023-11-15T18:16:52.165Z
          updatedAt: 2023-11-15T18:16:52.395Z
          filtersUpdatedAt: 2023-11-15T18:16:52.165Z
          processingStatus: PROCESSING
          createdById: 123
          updatedById: 123
          processingType: DYNAMIC
          objectTypeId: 0-1
          name: Dynamic Association List Example
          filterBranch:
            filterBranches:
            - filterBranches:
              - filters:
                - property: hs_is_closed_won
                  operation:
                    operator: IS_EQUAL_TO
                    includeObjectsWithNoValueSet: false
                    value: true
                    operationType: BOOL
                  filterType: PROPERTY
                objectTypeId: 0-3
                operator: IN_LIST
                associationTypeId: 4
                associationCategory: HUBSPOT_DEFINED
                filterBranchOperator: AND
                filterBranchType: ASSOCIATION
              filters:
              - property: firstname
                operation:
                  operator: IS_EQUAL_TO
                  includeObjectsWithNoValueSet: false
                  values:
                  - test
                  - name
                  operationType: MULTISTRING
                filterType: PROPERTY
              filterBranchOperator: AND
              filterBranchType: AND
            filterBranchOperator: OR
            filterBranchType: OR
      properties:
        list:
          $ref: '#/components/schemas/PublicObjectList'
      required:
      - list
      type: object
    MembershipsUpdateResponse:
      description: "The IDs of the records that were `added`, `removed`, and/or found\
        \ to be `missing` as a result of the \nmembership update request."
      example:
        recordIdsRemoved:
        - 0
        - 0
        recordsIdsAdded:
        - 6
        - 6
        recordIdsMissing:
        - 1
        - 1
      properties:
        recordIdsRemoved:
          description: The IDs of the records that were `removed` from the list.
          items:
            format: int64
            type: integer
          type: array
        recordsIdsAdded:
          items:
            format: int64
            type: integer
          type: array
        recordIdsMissing:
          description: The IDs of the records that were `missing` (e.g. did not exist
            in the portal) and so were not `added` or `removed`.
          items:
            format: int64
            type: integer
          type: array
      required:
      - recordIdsMissing
      - recordIdsRemoved
      - recordsIdsAdded
      type: object
    PublicUnifiedEventsFilterBranch:
      properties:
        filterBranchType:
          default: UNIFIED_EVENTS
          enum:
          - UNIFIED_EVENTS
          type: string
        filterBranches:
          items:
            $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch_filterBranches_inner'
          type: array
        filters:
          items:
            $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch_filters_inner'
          type: array
        eventTypeId:
          type: string
        operator:
          enum:
          - HAS_COMPLETED
          - HAS_NOT_COMPLETED
          type: string
        filterBranchOperator:
          type: string
      required:
      - eventTypeId
      - filterBranchOperator
      - filterBranchType
      - filterBranches
      - filters
      - operator
      title: UNIFIED_EVENTS
      type: object
    PublicMonthReference:
      properties:
        referenceType:
          default: MONTH
          enum:
          - MONTH
          type: string
        hour:
          format: int32
          type: integer
        minute:
          format: int32
          type: integer
        second:
          format: int32
          type: integer
        millisecond:
          format: int32
          type: integer
        day:
          format: int32
          type: integer
      required:
      - day
      - referenceType
      title: MONTH
      type: object
    PublicNumOccurrencesRefineBy:
      properties:
        type:
          default: NUM_OCCURRENCES
          enum:
          - NUM_OCCURRENCES
          type: string
        minOccurrences:
          format: int32
          type: integer
        maxOccurrences:
          format: int32
          type: integer
      required:
      - type
      title: NUM_OCCURRENCES
      type: object
    PublicObjectList:
      description: An object list definition.
      example:
        processingType: processingType
        objectTypeId: objectTypeId
        updatedById: 0
        filtersUpdatedAt: 2000-01-23T04:56:07.000+00:00
        listId: 6
        createdAt: 2000-01-23T04:56:07.000+00:00
        processingStatus: processingStatus
        deletedAt: 2000-01-23T04:56:07.000+00:00
        listVersion: 1
        name: name
        createdById: 5
        filterBranch: null
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        processingType:
          description: The processing type of the list.
          type: string
        objectTypeId:
          description: The object type of the list.
          type: string
        updatedById:
          description: The ID of the user that last updated the list.
          format: int32
          type: integer
        filtersUpdatedAt:
          description: The time when the filters for this list were last updated.
          format: date-time
          type: string
        listId:
          description: The **ILS ID** of the list.
          format: int32
          type: integer
        createdAt:
          description: The time when the list was created.
          format: date-time
          type: string
        processingStatus:
          description: The processing status of the list.
          type: string
        deletedAt:
          description: The time when the list was deleted.
          format: date-time
          type: string
        listVersion:
          description: The version of the list.
          format: int32
          type: integer
        name:
          description: The name of the list.
          type: string
        createdById:
          description: The ID of the user that created the list.
          format: int32
          type: integer
        filterBranch:
          $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch_filterBranches_inner'
        updatedAt:
          description: The time the list was last updated.
          format: date-time
          type: string
      required:
      - listId
      - listVersion
      - name
      - objectTypeId
      - processingStatus
      - processingType
      type: object
    PublicCtaAnalyticsFilter:
      properties:
        filterType:
          default: CTA
          enum:
          - CTA
          type: string
        coalescingRefineBy:
          $ref: '#/components/schemas/PublicEventAnalyticsFilter_coalescingRefineBy'
        pruningRefineBy:
          $ref: '#/components/schemas/PublicEventAnalyticsFilter_coalescingRefineBy'
        operator:
          type: string
        ctaName:
          type: string
      required:
      - ctaName
      - filterType
      - operator
      title: CTA
      type: object
    PublicDateTimePropertyOperation:
      properties:
        operationType:
          default: DATETIME
          enum:
          - DATETIME
          type: string
        operator:
          type: string
        includeObjectsWithNoValueSet:
          type: boolean
        requiresTimeZoneConversion:
          type: boolean
        timestamp:
          format: int32
          type: integer
      required:
      - includeObjectsWithNoValueSet
      - operationType
      - operator
      - requiresTimeZoneConversion
      - timestamp
      title: DATETIME
      type: object
    PublicCampaignInfluencedFilter:
      properties:
        filterType:
          default: CAMPAIGN_INFLUENCED
          enum:
          - CAMPAIGN_INFLUENCED
          type: string
        campaignId:
          type: string
      required:
      - campaignId
      - filterType
      title: CAMPAIGN_INFLUENCED
      type: object
    ListFetchResponse:
      description: The response for a list fetch request.
      example:
        list:
          processingType: processingType
          objectTypeId: objectTypeId
          updatedById: 0
          filtersUpdatedAt: 2000-01-23T04:56:07.000+00:00
          listId: 6
          createdAt: 2000-01-23T04:56:07.000+00:00
          processingStatus: processingStatus
          deletedAt: 2000-01-23T04:56:07.000+00:00
          listVersion: 1
          name: name
          createdById: 5
          filterBranch: null
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        list:
          $ref: '#/components/schemas/PublicObjectList'
      required:
      - list
      type: object
    PublicFiscalQuarterReference:
      properties:
        referenceType:
          default: FISCAL_QUARTER
          enum:
          - FISCAL_QUARTER
          type: string
        hour:
          format: int32
          type: integer
        minute:
          format: int32
          type: integer
        second:
          format: int32
          type: integer
        millisecond:
          format: int32
          type: integer
        month:
          format: int32
          type: integer
        day:
          format: int32
          type: integer
      required:
      - day
      - month
      - referenceType
      title: FISCAL_QUARTER
      type: object
    PublicConstantFilter:
      properties:
        filterType:
          default: CONSTANT
          enum:
          - CONSTANT
          type: string
        shouldAccept:
          type: boolean
        source:
          type: string
      required:
      - filterType
      - shouldAccept
      title: CONSTANT
      type: object
    PublicSetOccurrencesRefineBy:
      properties:
        type:
          default: SET_OCCURRENCES
          enum:
          - SET_OCCURRENCES
          type: string
        setType:
          type: string
      required:
      - setType
      - type
      title: SET_OCCURRENCES
      type: object
    PublicComparativeDatePropertyOperation:
      properties:
        operationType:
          default: COMPARATIVE_DATE
          enum:
          - COMPARATIVE_DATE
          type: string
        operator:
          type: string
        includeObjectsWithNoValueSet:
          type: boolean
        comparisonPropertyName:
          type: string
        defaultComparisonValue:
          type: string
      required:
      - comparisonPropertyName
      - includeObjectsWithNoValueSet
      - operationType
      - operator
      title: COMPARATIVE_DATE
      type: object
    Error:
      example:
        message: Invalid input (details will vary based on the error)
        correlationId: aeb5f871-7f07-4993-9211-075dc63e7cbf
        category: VALIDATION_ERROR
        links:
          knowledge-base: https://www.hubspot.com/products/service/knowledge-base
      properties:
        subCategory:
          description: A specific category that contains more specific detail about
            the error
          type: string
        context:
          additionalProperties:
            items:
              type: string
            type: array
          description: Context about the error condition
          example:
            missingScopes:
            - scope1
            - scope2
            invalidPropertyName:
            - propertyValue
          type: object
        correlationId:
          description: A unique identifier for the request. Include this value with
            any error reports or support tickets
          example: aeb5f871-7f07-4993-9211-075dc63e7cbf
          format: uuid
          type: string
        links:
          additionalProperties:
            type: string
          description: A map of link names to associated URIs containing documentation
            about the error or recommended remediation steps
          example:
            knowledge-base: https://www.hubspot.com/products/service/knowledge-base
          type: object
        message:
          description: A human readable message describing the error along with remediation
            steps where appropriate
          example: Invalid input (details will vary based on the error)
          type: string
        category:
          description: The error category
          example: VALIDATION_ERROR
          type: string
        errors:
          description: further information about the error
          items:
            $ref: '#/components/schemas/ErrorDetail'
          type: array
      required:
      - category
      - correlationId
      - message
      type: object
    PublicRangedNumberPropertyOperation:
      properties:
        operationType:
          default: NUMBER_RANGED
          enum:
          - NUMBER_RANGED
          type: string
        operator:
          type: string
        includeObjectsWithNoValueSet:
          type: boolean
        upperBound:
          format: int32
          type: integer
        lowerBound:
          format: int32
          type: integer
      required:
      - includeObjectsWithNoValueSet
      - lowerBound
      - operationType
      - operator
      - upperBound
      title: NUMBER_RANGED
      type: object
    CollectionResponseLong:
      description: The results and paging cursor for a membership fetch request.
      example:
        paging:
          next:
            link: link
            after: after
          prev:
            before: before
            link: link
        results:
        - 0
        - 0
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        results:
          description: The record IDs for the requested page of memberships.
          items:
            format: int64
            type: integer
          type: array
      required:
      - results
      type: object
    PublicPageViewAnalyticsFilter:
      properties:
        filterType:
          default: PAGE_VIEW
          enum:
          - PAGE_VIEW
          type: string
        coalescingRefineBy:
          $ref: '#/components/schemas/PublicEventAnalyticsFilter_coalescingRefineBy'
        pruningRefineBy:
          $ref: '#/components/schemas/PublicEventAnalyticsFilter_coalescingRefineBy'
        operator:
          type: string
        enableTracking:
          type: boolean
        pageUrl:
          type: string
      required:
      - filterType
      - operator
      - pageUrl
      title: PAGE_VIEW
      type: object
    ListCreateRequest:
      description: The request object used when creating a new object list.
      example:
        name: Dynamic Association List Example
        objectTypeId: 0-1
        processingType: DYNAMIC
        filterBranch:
          filterBranches:
          - filterBranches:
            - filters:
              - property: hs_is_closed_won
                operation:
                  operator: IS_EQUAL_TO
                  value: true
                  operationType: BOOL
                filterType: PROPERTY
              objectTypeId: 0-3
              associationTypeId: 4
              associationCategory: HUBSPOT_DEFINED
              filterBranchType: ASSOCIATION
              operator: IN_LIST
            filters:
            - property: firstname
              operation:
                operator: IS_EQUAL_TO
                operationType: MULTISTRING
                values:
                - test
                - name
              filterType: PROPERTY
            filterBranchType: AND
          filterBranchType: OR
      properties:
        objectTypeId:
          description: The object type ID of the type of objects that the list will
            store.
          type: string
        processingType:
          description: "The processing type of the list. One of: `SNAPSHOT`, `MANUAL`,\
            \ or `DYNAMIC`."
          type: string
        listFolderId:
          description: "The ID of the folder that the list should be created in. If\
            \ left blank, then the list will be created in the root of the list folder\
            \ structure."
          format: int32
          type: integer
        name:
          description: "The name of the list, which must be globally unique across\
            \ all public lists in the portal."
          type: string
        filterBranch:
          $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch_filterBranches_inner'
      required:
      - name
      - objectTypeId
      - processingType
      type: object
    PublicBoolPropertyOperation:
      properties:
        operationType:
          default: BOOL
          enum:
          - BOOL
          type: string
        operator:
          type: string
        includeObjectsWithNoValueSet:
          type: boolean
        value:
          type: boolean
      required:
      - includeObjectsWithNoValueSet
      - operationType
      - operator
      - value
      title: BOOL
      type: object
    MembershipChangeRequest:
      description: The IDs of the records to add and/or remove from a list.
      example:
        recordIdsToAdd:
        - 123
        - 456
        - 789
        recordIdsToRemove:
        - 654
      properties:
        recordIdsToRemove:
          description: ""
          example:
          - 654
          items:
            format: int64
            type: integer
          type: array
        recordIdsToAdd:
          description: ""
          example:
          - 123
          - 456
          - 789
          items:
            format: int64
            type: integer
          type: array
      required:
      - recordIdsToAdd
      - recordIdsToRemove
      type: object
    PublicComparativePropertyUpdatedOperation:
      properties:
        operationType:
          default: COMPARATIVE_PROPERTY_UPDATED
          enum:
          - COMPARATIVE_PROPERTY_UPDATED
          type: string
        operator:
          type: string
        includeObjectsWithNoValueSet:
          type: boolean
        comparisonPropertyName:
          type: string
        defaultComparisonValue:
          type: string
      required:
      - comparisonPropertyName
      - includeObjectsWithNoValueSet
      - operationType
      - operator
      title: COMPARATIVE_PROPERTY_UPDATED
      type: object
    PreviousPage:
      description: The cursor for the previous page of records.
      example:
        before: before
        link: link
      properties:
        before:
          description: The offset of the previous page of records.
          type: string
        link:
          description: A direct link to the request for the previous page of records.
          type: string
      required:
      - before
      type: object
    PublicAndFilterBranch:
      properties:
        filterBranchType:
          default: AND
          enum:
          - AND
          type: string
        filterBranches:
          items:
            $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch_filterBranches_inner'
          type: array
        filters:
          items:
            $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch_filters_inner'
          type: array
        filterBranchOperator:
          type: string
      required:
      - filterBranchOperator
      - filterBranchType
      - filterBranches
      - filters
      title: AND
      type: object
    PublicIntegrationEventFilter:
      properties:
        filterType:
          default: INTEGRATION_EVENT
          enum:
          - INTEGRATION_EVENT
          type: string
        eventTypeId:
          format: int32
          type: integer
        filterLines:
          items:
            $ref: '#/components/schemas/PublicEventFilterMetadata'
          type: array
      required:
      - eventTypeId
      - filterLines
      - filterType
      title: INTEGRATION_EVENT
      type: object
    PublicAllPropertyTypesOperation:
      properties:
        operationType:
          default: ALL_PROPERTY
          enum:
          - ALL_PROPERTY
          type: string
        operator:
          type: string
        includeObjectsWithNoValueSet:
          type: boolean
      required:
      - includeObjectsWithNoValueSet
      - operationType
      - operator
      title: ALL_PROPERTY
      type: object
    PublicEventFilterMetadata:
      properties:
        property:
          type: string
        operation:
          $ref: '#/components/schemas/PublicPropertyFilter_operation'
      required:
      - operation
      - property
      type: object
    PublicDatePoint:
      properties:
        timeType:
          default: DATE
          enum:
          - DATE
          type: string
        timezoneSource:
          type: string
        zoneId:
          type: string
        year:
          format: int32
          type: integer
        month:
          format: int32
          type: integer
        day:
          format: int32
          type: integer
        hour:
          format: int32
          type: integer
        minute:
          format: int32
          type: integer
        second:
          format: int32
          type: integer
        millisecond:
          format: int32
          type: integer
      required:
      - day
      - month
      - timeType
      - year
      - zoneId
      title: DATE
      type: object
    PublicAbsoluteComparativeTimestampRefineBy:
      properties:
        type:
          default: ABSOLUTE_COMPARATIVE
          enum:
          - ABSOLUTE_COMPARATIVE
          type: string
        comparison:
          type: string
        timestamp:
          format: int64
          type: integer
      required:
      - comparison
      - timestamp
      - type
      title: ABSOLUTE_COMPARATIVE
      type: object
    PublicSurveyMonkeyFilter:
      properties:
        filterType:
          default: SURVEY_MONKEY
          enum:
          - SURVEY_MONKEY
          type: string
        surveyId:
          type: string
        operator:
          type: string
      required:
      - filterType
      - operator
      - surveyId
      title: SURVEY_MONKEY
      type: object
    PublicTimeOffset:
      properties:
        offsetDirection:
          type: string
        timeUnit:
          type: string
        amount:
          format: int64
          type: integer
      required:
      - amount
      - offsetDirection
      - timeUnit
      type: object
    NextPage:
      description: The cursor for the next page of records.
      example:
        link: link
        after: after
      properties:
        link:
          description: A direct link to the request for the next page of records.
          type: string
        after:
          description: The offset for the next page of records.
          type: string
      required:
      - after
      type: object
    PublicAbsoluteRangedTimestampRefineBy:
      properties:
        type:
          default: ABSOLUTE_RANGED
          enum:
          - ABSOLUTE_RANGED
          type: string
        rangeType:
          type: string
        lowerTimestamp:
          format: int64
          type: integer
        upperTimestamp:
          format: int64
          type: integer
      required:
      - lowerTimestamp
      - rangeType
      - type
      - upperTimestamp
      title: ABSOLUTE_RANGED
      type: object
    PublicRollingPropertyUpdatedOperation:
      properties:
        operationType:
          default: ROLLING_PROPERTY_UPDATED
          enum:
          - ROLLING_PROPERTY_UPDATED
          type: string
        operator:
          type: string
        includeObjectsWithNoValueSet:
          type: boolean
        numberOfDays:
          format: int32
          type: integer
      required:
      - includeObjectsWithNoValueSet
      - numberOfDays
      - operationType
      - operator
      title: ROLLING_PROPERTY_UPDATED
      type: object
    PublicPropertyAssociationFilterBranch_filterBranches_inner:
      oneOf:
      - $ref: '#/components/schemas/PublicOrFilterBranch'
      - $ref: '#/components/schemas/PublicAndFilterBranch'
      - $ref: '#/components/schemas/PublicNotAllFilterBranch'
      - $ref: '#/components/schemas/PublicNotAnyFilterBranch'
      - $ref: '#/components/schemas/PublicRestrictedFilterBranch'
      - $ref: '#/components/schemas/PublicUnifiedEventsFilterBranch'
      - $ref: '#/components/schemas/PublicPropertyAssociationFilterBranch'
      - $ref: '#/components/schemas/PublicAssociationFilterBranch'
    PublicPropertyAssociationFilterBranch_filters_inner:
      oneOf:
      - $ref: '#/components/schemas/PublicPropertyFilter'
      - $ref: '#/components/schemas/PublicAssociationInListFilter'
      - $ref: '#/components/schemas/PublicPageViewAnalyticsFilter'
      - $ref: '#/components/schemas/PublicCtaAnalyticsFilter'
      - $ref: '#/components/schemas/PublicEventAnalyticsFilter'
      - $ref: '#/components/schemas/PublicFormSubmissionFilter'
      - $ref: '#/components/schemas/PublicFormSubmissionOnPageFilter'
      - $ref: '#/components/schemas/PublicIntegrationEventFilter'
      - $ref: '#/components/schemas/PublicEmailSubscriptionFilter'
      - $ref: '#/components/schemas/PublicCommunicationSubscriptionFilter'
      - $ref: '#/components/schemas/PublicCampaignInfluencedFilter'
      - $ref: '#/components/schemas/PublicSurveyMonkeyFilter'
      - $ref: '#/components/schemas/PublicSurveyMonkeyValueFilter'
      - $ref: '#/components/schemas/PublicWebinarFilter'
      - $ref: '#/components/schemas/PublicEmailEventFilter'
      - $ref: '#/components/schemas/PublicPrivacyAnalyticsFilter'
      - $ref: '#/components/schemas/PublicAdsSearchFilter'
      - $ref: '#/components/schemas/PublicAdsTimeFilter'
      - $ref: '#/components/schemas/PublicInListFilter'
      - $ref: '#/components/schemas/PublicNumAssociationsFilter'
      - $ref: '#/components/schemas/PublicUnifiedEventsFilter'
      - $ref: '#/components/schemas/PublicPropertyAssociationInListFilter'
      - $ref: '#/components/schemas/PublicConstantFilter'
      - $ref: '#/components/schemas/PublicUnifiedEventsInListFilter'
    PublicEventAnalyticsFilter_coalescingRefineBy:
      oneOf:
      - $ref: '#/components/schemas/PublicNumOccurrencesRefineBy'
      - $ref: '#/components/schemas/PublicSetOccurrencesRefineBy'
      - $ref: '#/components/schemas/PublicRelativeComparativeTimestampRefineBy'
      - $ref: '#/components/schemas/PublicRelativeRangedTimestampRefineBy'
      - $ref: '#/components/schemas/PublicAbsoluteComparativeTimestampRefineBy'
      - $ref: '#/components/schemas/PublicAbsoluteRangedTimestampRefineBy'
      - $ref: '#/components/schemas/PublicAllHistoryRefineBy'
      - $ref: '#/components/schemas/PublicTimePointOperation'
      - $ref: '#/components/schemas/PublicRangedTimeOperation'
    PublicPropertyFilter_operation:
      oneOf:
      - $ref: '#/components/schemas/PublicBoolPropertyOperation'
      - $ref: '#/components/schemas/PublicNumberPropertyOperation'
      - $ref: '#/components/schemas/PublicStringPropertyOperation'
      - $ref: '#/components/schemas/PublicDateTimePropertyOperation'
      - $ref: '#/components/schemas/PublicRangedDatePropertyOperation'
      - $ref: '#/components/schemas/PublicComparativePropertyUpdatedOperation'
      - $ref: '#/components/schemas/PublicComparativeDatePropertyOperation'
      - $ref: '#/components/schemas/PublicRollingDateRangePropertyOperation'
      - $ref: '#/components/schemas/PublicRollingPropertyUpdatedOperation'
      - $ref: '#/components/schemas/PublicEnumerationPropertyOperation'
      - $ref: '#/components/schemas/PublicAllPropertyTypesOperation'
      - $ref: '#/components/schemas/PublicRangedNumberPropertyOperation'
      - $ref: '#/components/schemas/PublicMultiStringPropertyOperation'
      - $ref: '#/components/schemas/PublicDatePropertyOperation'
      - $ref: '#/components/schemas/PublicCalendarDatePropertyOperation'
      - $ref: '#/components/schemas/PublicTimePointOperation'
      - $ref: '#/components/schemas/PublicRangedTimeOperation'
    PublicTimePointOperation_timePoint:
      oneOf:
      - $ref: '#/components/schemas/PublicDatePoint'
      - $ref: '#/components/schemas/PublicIndexedTimePoint'
      - $ref: '#/components/schemas/PublicPropertyReferencedTime'
    PublicIndexedTimePoint_indexReference:
      oneOf:
      - $ref: '#/components/schemas/PublicNowReference'
      - $ref: '#/components/schemas/PublicTodayReference'
      - $ref: '#/components/schemas/PublicWeekReference'
      - $ref: '#/components/schemas/PublicFiscalQuarterReference'
      - $ref: '#/components/schemas/PublicFiscalYearReference'
      - $ref: '#/components/schemas/PublicYearReference'
      - $ref: '#/components/schemas/PublicQuarterReference'
      - $ref: '#/components/schemas/PublicMonthReference'
  securitySchemes:
    oauth2:
      flows:
        authorizationCode:
          authorizationUrl: https://app.hubspot.com/oauth/authorize
          scopes:
            crm.lists.read: ' '
            crm.lists.write: ' '
          tokenUrl: https://api.hubapi.com/oauth/v1/token
      type: oauth2
    private_apps:
      in: header
      name: private-app
      type: apiKey
x-hubspot-available-client-libraries:
- PHP
- Node
- Ruby
- Python
x-hubspot-product-tier-requirements:
  marketing: STARTER
  cms: STARTER
x-hubspot-documentation-banner: NONE
