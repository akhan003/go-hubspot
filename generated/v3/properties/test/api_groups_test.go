/*
Properties

Testing GroupsApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package properties

import (
	"context"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_properties_GroupsApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test GroupsApiService GroupsArchive", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var objectType string
		var groupName string

		httpRes, err := apiClient.GroupsApi.GroupsArchive(context.Background(), objectType, groupName).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test GroupsApiService GroupsCreate", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var objectType string

		resp, httpRes, err := apiClient.GroupsApi.GroupsCreate(context.Background(), objectType).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test GroupsApiService GroupsGetAll", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var objectType string

		resp, httpRes, err := apiClient.GroupsApi.GroupsGetAll(context.Background(), objectType).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test GroupsApiService GroupsGetByName", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var objectType string
		var groupName string

		resp, httpRes, err := apiClient.GroupsApi.GroupsGetByName(context.Background(), objectType, groupName).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test GroupsApiService GroupsUpdate", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var objectType string
		var groupName string

		resp, httpRes, err := apiClient.GroupsApi.GroupsUpdate(context.Background(), objectType, groupName).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
