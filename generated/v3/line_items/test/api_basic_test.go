/*
Line Items

Testing BasicAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package line_items

import (
	"context"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_line_items_BasicAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test BasicAPIService DeleteCrmV3ObjectsLineItemsLineItemIdArchive", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var lineItemId string

		httpRes, err := apiClient.BasicAPI.DeleteCrmV3ObjectsLineItemsLineItemIdArchive(context.Background(), lineItemId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BasicAPIService GetCrmV3ObjectsLineItemsGetPage", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.BasicAPI.GetCrmV3ObjectsLineItemsGetPage(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BasicAPIService GetCrmV3ObjectsLineItemsLineItemIdGetById", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var lineItemId string

		resp, httpRes, err := apiClient.BasicAPI.GetCrmV3ObjectsLineItemsLineItemIdGetById(context.Background(), lineItemId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BasicAPIService PatchCrmV3ObjectsLineItemsLineItemIdUpdate", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var lineItemId string

		resp, httpRes, err := apiClient.BasicAPI.PatchCrmV3ObjectsLineItemsLineItemIdUpdate(context.Background(), lineItemId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BasicAPIService PostCrmV3ObjectsLineItemsCreate", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.BasicAPI.PostCrmV3ObjectsLineItemsCreate(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
