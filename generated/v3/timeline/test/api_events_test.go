/*
CRM Timeline

Testing EventsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package timeline

import (
	"context"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_timeline_EventsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test EventsAPIService GetCrmV3TimelineEventsEventTemplateIdEventId", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var eventTemplateId string
		var eventId string

		resp, httpRes, err := apiClient.EventsAPI.GetCrmV3TimelineEventsEventTemplateIdEventId(context.Background(), eventTemplateId, eventId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test EventsAPIService GetCrmV3TimelineEventsEventTemplateIdEventIdDetail", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var eventTemplateId string
		var eventId string

		resp, httpRes, err := apiClient.EventsAPI.GetCrmV3TimelineEventsEventTemplateIdEventIdDetail(context.Background(), eventTemplateId, eventId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test EventsAPIService GetCrmV3TimelineEventsEventTemplateIdEventIdRender", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var eventTemplateId string
		var eventId string

		resp, httpRes, err := apiClient.EventsAPI.GetCrmV3TimelineEventsEventTemplateIdEventIdRender(context.Background(), eventTemplateId, eventId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test EventsAPIService PostCrmV3TimelineEvents", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.EventsAPI.PostCrmV3TimelineEvents(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test EventsAPIService PostCrmV3TimelineEventsBatchCreate", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.EventsAPI.PostCrmV3TimelineEventsBatchCreate(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
